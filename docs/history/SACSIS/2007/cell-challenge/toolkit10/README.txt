<------------------------------------------------------------------------->
Cell Speed Challenge 2007
ツールキット Version 2007-02-09 (Version 1.0)の使い方と解説

【規定課題概要】
多数のデータの系列が入力として与えられたときに，これらをある順序にした
がって並び替える処理をソーティングと呼びます．Cellスピードチャレンジ2007
の規定課題は「ソーティング」です．
ソーティングでは，データに含まれる並べ替えのために参照される項目をキーと
呼びます．このキーは単精度の浮動小数点数(C言語におけるfloat型)とします．
また，キーの値が昇順(小さい値が前方，大きい値が後方になるような順序)に
なるようにデータを並び替えるものとします．

【規定課題の詳細】
この文章を読む前に，Cell Speed Challenge 2007ホームページに掲載されている
「規定課題部門 規定課題の詳細」をよく読んでください．

---------------------------------------------------------------------------
【第１章 ツールキットのファイル構成】

ツールキットには次のファイルが含まれています．

(a) README.txt    : このファイル
(b) Code.txt      : すべてのソースコードをまとめたテキストファイル
(c) define.h      : すべてのプログラムがインクルードするファイル
(d) main_ppe.c    : PPEのためのメイン関数を含むCプログラム
(e) main_spe.c    : PPEのためのメイン関数を含むCプログラム
(f) spe1_sample.c : SPEのためのメイン関数を含むCプログラムのサンプル
(1) Makefile      : make コマンドが利用するファイル
(2) spe1.c        : SPEのためのメイン関数を含むCプログラム
(3) spe.h         : SPEのプログラムなどがインクルードするファイル

これらの中で(a)から(e)のファイルを変更してはいけません．
(f) spe1_sample.c はサンプルとして提供するファイルです．(2) spe1.c の雛形
として利用できす．
(1) Makefile (2) spe1.c (3) spe.h を変更して，高速なソーティングプログラム
の実装を目指してください．

(1) Makefile におけるコンパイルの最適化オプションなどを変更してもかまいま
せん．ただし，評価は ~/speed というディレクトリにておこないます．
またPPEのファイル名は main としてください．
これらを修正した場合には，プログラムの提出時に EXE_FILE をオリジナルの
値に戻してください．
EXE_FILE    = ~/speed/main

それぞれのSPEが起動するプログラムの名前を変更したい場合には，
(3) spe.h の該当する部分を修正してください．
ツールキットに含まれる (3) spe.h の内容は次のとおりです．
/*----------------------------------------------------------------------*/
/* Cell Speed Challenge 2007, ToolKit Version 2007-02-09                */
/*----------------------------------------------------------------------*/
#define EXE_SPE1 "speed/spe1"
#define EXE_SPE2 "speed/spe1"
#define EXE_SPE3 "speed/spe1"
#define EXE_SPE4 "speed/spe1"
#define EXE_SPE5 "speed/spe1"
#define EXE_SPE6 "speed/spe1"
#define EXE_SPE7 "speed/spe1"
/*----------------------------------------------------------------------*/

(2) spe1.c を編集して高速なソーティングプログラムの実装を目指してください．
必要であれば SPEごとに作成したソースコード(4)が含まれていてもかまいません．
(4) spe2.c spe3.c spe4.c spe5.c spe6.c spe7.c

【第２章 ツールキットの利用方法】

Cellオンラインサービス celldev3.celltsb.com にログインしてください．
ホームディレクトリに speed というディレクトリを作成し，
そこにツールキットをコピーします．このためのコマンドは次の通りです．

$ cd ~
$ mkdir speed
$ cp /export/home/cell2007/share/toolkit10/* .

コンパイルのためには，作成した speed というディレクトリに移動して，
make コマンドを利用します．このためのコマンドは次の通りです．

$ cd ~/speed
$ make

2番目のmakeでコンパイルをおこないます．

提供している spe1.c の内容を示します．
/*----------------------------------------------------------------------*/
/* Cell Speed Challenge 2007, ToolKit Version 2007-02-09                */
/*----------------------------------------------------------------------*/
#include <stdlib.h>
#include <float.h>
#include <spu_intrinsics.h>
#include <spelib.h>
#include <spe_stdio.h>
#include <spu_mfcio.h>
#include "spe_util.h"
#include "define.h"
#include "spe.h"
/*-----------------------------------------------------------------------*/
void spe_sort(struct spe_ctrl* sc){
};
/*----------------------------------------------------------------------*/

このように，ソーティングをおこなう関数spe_sortの処理は記述されていません．
この部分にコードを追加してください．

ツールキットでは，spe1_sample.c というサンプルファイルを提供しています．
このファイルを spe1.c の雛形として利用できます．ただし，このプログラムは
1番目の練習問題以外の入力に対しては正しく動作しないかもしれません．

$ cp spe1_sample.c spe1.c
$ make
$ make run

1番目のコマンドで，サンプルファイルを spe1.c としてコピーします．
2番目の make でコンパイルをおこないます．
3番目の make run により1番目の練習問題の実行を開始します．

処理が正しくおこなわれていれば，次のようなメッセージが出力されます．

[ppe_] Cell Speed Challenge lib.c version 1.0 2007-02-09
[ppe_] * Result Good! *
[ppe_] problem=1
[ppe_] n=983040, m=7, input_data=30 [MByte]
[ppe_] elapsed time by SPE(sec) 2.725058
[ppe_] elapsed time by PPE(sec) 2.732651

1行目は，コンパイル時に利用したlib.cのオブジェクトの版を表示します．
2行目に，実行が正しい場合には Good と表示されます．
3行目は，実行した問題の番号を表示します．
3行目は，要素の数N, リストの長さM, 入力データのサイズを表示します．
4行目は，SPEで計測したソーティングの処理時間を表示します．
ここで表示された処理時間が短くなるように最適化を施してください．
5行目は，参考のためにPPEで計測したソーティングの処理時間を表示します．

つづいて，2番目の練習問題を実行してみます．

$ make run2

提供しているサンプルファイルでは，2番目以降の練習問題を正しく解くことは
できません．そのため，次のようなメッセージが出力されます．

[ppe_] Cell Speed Challenge lib.c version 1.0 2007-02-09
[ppe_] * Result Wrong !* error(100)
[ppe_] problem=2
[ppe_] n=1024, m=7, input_data=0 [MByte]
[ppe_] elapsed time by SPE(sec) 0.003429
[ppe_] elapsed time by PPE(sec) 0.004149

2行目に Wrong と表示され，正しくソーティングがおこなわれていないことが
わかります．

参加者は，少なくとも，1から5までの全ての練習問題を正しくソーティングする
プログラムを作成しなければなりません．
もちろん，その他の入力データについても正しくソートする必要があります．
全ての練習問題を連続して実行するには次のコマンドを利用します．

$ make runall

<------------------------------------------------------------------------->
質問やバグ情報などは cellspeed2007@arch.cs.titech.ac.jp までお願いします．
マルチコアプログラミングコンテスト「Cellスピードチャレンジ2007」実行委員会
http://www.hpcc.jp/sacsis/2007/cell-challenge/
<------------------------------------------------------------------------->
